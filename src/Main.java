import java.util.*;

public class Main {
       public static void main(String[] args) {
              String text = "В молодости Диоген получил пророчество от дельфийской пифии «переоценивать ценности», которое вначале принял буквально и стал фальшивомонетчиком. После того, как его уличили в преступлении, был вынужден бежать из родного города. Диоген прибыл в Афины и стал учеником основателя школы киников Антисфена. Вскоре стал знаменитым благодаря своей мудрости, стилю жизни и эпатажным выходкам.\n" +
                      "\n" +
                      "В своём учении Диоген пропагандировал аскетизм — отказ от земных благ, независимость и самодостаточность. Чувство зависимости от внешних обстоятельств, согласно Диогену, было уделом раба. Он отрёкся лишь от тех потребностей, удовлетворение которых требовало компромисса, отказа от свободной жизни. Даже в рабстве, по мнению Диогена, имея внутреннюю свободу, можно оставаться независимым человеком.\n" +
                      "\n" +
                      "Одновременно с аскетизмом Диоген отвергал понятия брака, отечества, первым введя в обиход слово «космополит», презирал условности. Его шокирующие действия не только привлекали внимание, но и стали своего рода аргументом в споре, которому «серьёзная наука» ничего не может противопоставить. Образ народного героя и фольклорного мудреца Диогена привёл к появлению множества историй и преданий, и соответственно противоречий и домыслов в источниках.";
              text = text.replaceAll("[^a-zA-Zа-яА-Я0-9\\s]", "");  // очистка текста от знаков препинания
              Map<String, Integer> poolString = new HashMap<>();
              String[] words = text.split("\\s+"); //делим текст на слова
              for (String word : words) {
                     if (!word.isEmpty()) { //если строка не пустая то блок действует
                            word = word.toLowerCase(); // приводим все слова к нижнему регистру
                            poolString.put(word, poolString.getOrDefault(word, 0) + 1); // если слово уже есть в карте то увеличиваем счетчик а если нет добавляем новое слово с частотой 1
                     }
              }
              System.out.println("Сколько раз встречаеться каждое слово в коллекции: ");
              System.out.println(poolString.toString());
              Set<String> uniqueWords = new TreeSet<>(poolString.keySet()); // gолучение всех уникальных слов и их сортировка с использованием трисет
              System.out.println("Список всех уникальных слов, отсортированных по алфавиту:");
              uniqueWords.forEach(System.out::println);
              System.out.println("\n"+ "Количество уникальных слов: " + uniqueWords.size());
       }
}